name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true

env:
  JAR_NAME_TEMPLATE: reddit-telegram-repeater-*-shaded.jar
  TAG: v${{ github.event.inputs.version }}

jobs:
  check_input:
    runs-on: ubuntu-latest
    steps:
      - name: Check input
        id: check_input
        run: |
          [[ ${{ github.event.inputs.version }} =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] && echo "match=true" >> $GITHUB_OUTPUT || echo "match=false" >> $GITHUB_OUTPUT
      - name: Validate input
        if: steps.check_input.outputs.match != 'true'
        run: |
          echo "::error::Incorrect release version format: ${{ github.event.inputs.version }}. Expected format: x.y.z."
          exit 1

  release:
    runs-on: ubuntu-latest
    needs: [ create-tag ]
    steps:
      - name: Set JAR_NAME
        run: |
          echo "JAR_NAME=${{ env.JAR_NAME_TEMPLATE }}" | sed "s/*/${{ github.event.inputs.version }}/g" >> $GITHUB_ENV
      - name: Set JAR_PATH
        run: |
          echo "JAR_PATH=target/${{ env.JAR_NAME }}" >> $GITHUB_ENV
      - name: Set RUN_CMD
        run: |
          echo "RUN_CMD=${{ secrets.REMOTE_DIR }}"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
      - name: Build with Maven
        run: mvn package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: ${{ env.TAG }}
          draft: true
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.JAR_PATH }}
          asset_name: ${{ env.JAR_NAME }}
          asset_content_type: application/java-archive
      - name: Upload artifact to remote
        uses: cross-the-world/ssh-scp-ssh-pipelines@latest
        with:
          host: ${{ secrets.REMOTE_HOST }}
          user: ${{ secrets.REMOTE_USER }}
          pass: ${{ secrets.REMOTE_PASS }}
          port: ${{ secrets.REMOTE_PORT }}
          first_ssh: |
            cd ${{ secrets.REMOTE_DIR }}
            > ${{ secrets.RUN_FILE }}
            rm -rf ${{ env.JAR_NAME_TEMPLATE }}
          scp: |
            ${{ env.JAR_PATH }} => ${{ secrets.REMOTE_DIR }}
          last_ssh: |
            cd ${{ secrets.REMOTE_DIR }}
            echo "${{ secrets.RUN_CMD }}" | sed "s/{version}/${{ github.event.inputs.version }}/g" >> ${{ secrets.RUN_FILE }}
